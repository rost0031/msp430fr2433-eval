/*.$file${.::i2c_ao.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/
/*
* Model: i2c_ao.qm
* File:  ${.::i2c_ao.h}
*
* This code has been generated by QM 5.0.2 <www.state-machine.com/qm/>.
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* This program is open source software: you can redistribute it and/or
* modify it under the terms of the GNU General Public License as published
* by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but
* WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
* or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
* for more details.
*/
/*.$endhead${.::i2c_ao.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
/**
 * @file    i2c_ao.h
 * @brief   I2C QPC Active Object
 *
 * Copyright 2020, Harry Rostovtsev.
 * All other rights reserved.
 */

/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __I2C_AO_H
#define __I2C_AO_H

/* Includes ------------------------------------------------------------------*/
#include "qpc.h"
#include "errors.h"

/* Exported defines ----------------------------------------------------------*/
/* Exported macros -----------------------------------------------------------*/
/* Exported types ------------------------------------------------------------*/

/*.$declare${Events::QpcI2CEvt_t} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/** Event type used to transport I2C data */
/*.${Events::QpcI2CEvt_t} ..................................................*/
typedef struct {
/* protected: */
    QEvt super;

    /** I2C data (received or to be sent) */
    uint8_t data[6];

    /** Number of bytes in pData */
    uint8_t size;

    /** I2C Device Address */
    uint8_t deviceAddress;

    /** This field specifies who sent this event originally so I2C AO knows
     * where to send back the response which is this same event with data
     * filled out */
    QActive* const caller;

    /** Status of the operation */
    Error_t status;
} QpcI2CEvt_t;
/*.$enddecl${Events::QpcI2CEvt_t} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/

/* Exported constants --------------------------------------------------------*/
/*.$declare${AOs::AO_I2C} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/** "opaque" pointer to the Active Object */
extern QActive * const AO_I2C;
/*.$enddecl${AOs::AO_I2C} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/

/* Exported functions --------------------------------------------------------*/
/*.$declare${AOs::I2CAO_ctor} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/**
 * @brief     C "constructor" for this "class".
 *
 * Initializes all the timers and queues used by the AO and sets of the
 * first state.
 *
 * @return None
 */
/*.${AOs::I2CAO_ctor} ......................................................*/
void I2CAO_ctor(void);
/*.$enddecl${AOs::I2CAO_ctor} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/


#endif                                                          /* __I2C_AO_H */
